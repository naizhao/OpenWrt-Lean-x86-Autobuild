#=================================================
# https://github.com/naizhao/OpenWrt-Lean-x86-Autobuild
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: 奶罩
# Blog: https://吴.中国
#=================================================

name: Build OpenWrt-3-in-1

on:
#  release:
#    types: published
  push:
    branches:
      - master
#    paths:
#      - '.config'
  schedule:
    - cron: 0 2 * * *

env:
  REPO_LEAN_URL: https://github.com/coolsnowwolf/lede
  REPO_LIENOL_LEAN_URL: https://github.com/Lienol/openwrt
  REPO_LIENOL_OFFICIAL_URL: https://github.com/Lienol/openwrt
  REPO_LEAN_BRANCH: master
  REPO_LIENOL_LEAN_BRANCH: dev-lean-lede
  REPO_LIENOL_OFFICIAL_BRANCH: dev-19.07
  CONFIG_FILE: .config
  DIY_SH: diy.sh
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo swapoff /swapfile
        sudo rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        curl -fsSL https://raw.githubusercontent.com/P3TERX/dotfiles/master/.bashrc >> ~/.bashrc
        # 利用挂载在 /mnt/ 的 14G 额外空间:
        sudo mkdir -p -m 777 /mnt/openwrt/dl /mnt/openwrt/packages
        

    - name: Clone source code
      run: |
      git clone --depth 1 $REPO_LEAN_URL -b $REPO_LEAN_BRANCH openwrt_lean
      git clone --depth 1 $REPO_LIENOL_LEAN_URL -b $REPO_LIENOL_LEAN_BRANCH openwrt_lienol_lean
      git clone --depth 1 $REPO_LIENOL_OFFICIAL_URL -b $REPO_LIENOL_OFFICIAL_BRANCH openwrt_lienol_official

    - name: Update & install feeds
      run:
      cd openwrt_lean && ln -s /mnt/openwrt/dl ./dl && ./scripts/feeds update -a && ./scripts/feeds install -a
      cd openwrt_lienol_lean && ln -s /mnt/openwrt/dl ./dl && ./scripts/feeds update -a && ./scripts/feeds install -a
      cd openwrt_lienol_official && ln -s /mnt/openwrt/dl ./dl && ./scripts/feeds update -a && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e $CONFIG_FILE ] && cp $CONFIG_FILE openwrt_lean/.config
        [ -e $CONFIG_FILE ] && cp $CONFIG_FILE openwrt_lienol_lean/.config
        [ -e $CONFIG_FILE ] && cp $CONFIG_FILE openwrt_lienol_official/.config
        chmod +x $DIY_SH
        cd openwrt_lean && ../$DIY_SH && cd ..
        cd openwrt_lienol_lean && ../$DIY_SH && cd ..
        
    - name: SSH connection to Actions
      uses: P3TERX/debugger-action@master
      if: env.SSH_ACTIONS == 'true'

#   编译lean
    - name: Download package & Compile Lean
      id: download_compile_lean
      run: |
        cd openwrt_lean
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        cp ./bin/targets/x86/64/openwrt-x86-64-combined-ext4.img.gz /mnt/openwrt/packages/lean-openwrt-x86-64-combined-ext4.img.gz
        echo "::set-output name=status_lean::success"

#   编译lienol lean
    - name: Download package & Compile Lienol Lean
      id: download_compile_lienol_lean
      run: |
        cd openwrt_lienol_lean
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        cp ./bin/targets/x86/64/openwrt-x86-64-combined-ext4.img.gz /mnt/openwrt/packages/lienol-lean-openwrt-x86-64-combined-ext4.img.gz
        echo "::set-output name=status_lienol_lean::success"

#   编译lean
    - name: Download package & Compile Lienol Official
      id: download_compile_lienol_official
      run: |
        cd openwrt_lienol_official
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        cp ./bin/targets/x86/64/openwrt-x86-64-combined-ext4.img.gz /mnt/openwrt/packages/lienol-official-openwrt-x86-64-combined-ext4.img.gz
        echo "::set-output name=status_lienol_official::success"

    - name: Upload firmware packages
      uses: actions/upload-artifact@master
      if: steps.organize.outputs.status_lean == 'success' && steps.organize.outputs.status_lienol_lean == 'success' && steps.organize.outputs.status_lienol_official == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware_Package
        path: /mnt/openwrt/packages/

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.SuperSecret }}
      with:
        tag_name: release-openwrt-v${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        draft: false
        prerelease: false
   
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: AButler/upload-release-assets@v2.0
      with:
        files: '/mnt/openwrt/packages/*'
        repo-token: ${{ secrets.SuperSecret }}
        release-tag: release-openwrt-v${{ github.run_number }}


